{"version":3,"file":"component---src-pages-projects-jsx-6b52da091565f5ada98f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://gatsby-starter-default/./node_modules/@mui/material/CardContent/CardContent.js","webpack://gatsby-starter-default/./node_modules/@mui/material/Card/cardClasses.js","webpack://gatsby-starter-default/./node_modules/@mui/material/Card/Card.js","webpack://gatsby-starter-default/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://gatsby-starter-default/./node_modules/@mui/material/CardActions/CardActions.js","webpack://gatsby-starter-default/./src/pages/projects.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import * as React from 'react';\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport Box from '@mui/material/Box';\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\r\nimport { graphql } from 'gatsby'\r\nimport { Divider, Card, CardContent, CardActions, Button, CardMedia } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport projects from './projects.json';\r\n\r\nconst ProjectsPage = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <section className=\"h-screen\">\r\n        <div className=\"container h-full flex flex-col items-center content-center justify-center\">\r\n          <h1 className=\"text-[40px] md:text-[70px] font-bold uppercase text-white text-center tracking-widest\">My Projects</h1>\r\n          <h6 className=\"text-white text-center text-[16px] md:text-[25px] px-0 md:px-40 tracking-wider\">Delivering excellence across diverse industries through versatile and impactful projects.</h6>\r\n        </div>\r\n      </section>\r\n      <Divider />\r\n      <div className=\"container flex flex-col text-white py-5 space-y-4 px-0 md:px-[200px]\">\r\n        {projects.map((project, index) => {\r\n          const item = data.allFile.edges.find(edge => edge.node.relativePath === project.image);\r\n\r\n          if (item) {\r\n            return (\r\n              <div className=\"py-32\" key={index}>\r\n                <Card variant=\"outlined\" className=\"transition duration-200 ease-in-out transform hover:drop-shadow-2xl hover:shadow-2xl\">\r\n                  <div className='h-[550px] w-auto overflow-hidden'>\r\n                    <GatsbyImage\r\n                      className=\"rounded-md h-full w-auto object-cover\"\r\n                      image={item.node.childImageSharp.gatsbyImageData}\r\n                      style={{ width: \"100%\", height: \"auto\" }}\r\n                      formats={[\"auto\", \"webp\"]}\r\n                      loading=\"lazy\"\r\n                      alt={project.title} \r\n                    />\r\n                  </div>\r\n                  \r\n                  <CardContent>\r\n                    <Typography variant=\"h5\" className=\"uppercase font-bold\">\r\n                      {project.title}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" className=\"uppercase\" color=\"text.secondary\">\r\n                      {project.company}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                      {project.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n\r\n                  <CardActions className=\"px-4 !pb-6\">\r\n                    <a href=\"#\" className=\"transition ease-in-out border-2 border-primary px-3 py-1 hover:bg-transparent text-primary hover:bg-primary hover:text-white hover:-translate-y-1 rounded-md duration-300\">Learn More</a>\r\n                  </CardActions>\r\n                </Card>    \r\n              </div> \r\n            )\r\n          }\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query ProjectsPageQuery {\r\n      allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\r\n        edges {\r\n          node {\r\n            relativePath\r\n            childImageSharp {\r\n              gatsbyImageData(layout: CONSTRAINED)\r\n            }\r\n          }\r\n        }\r\n     }\r\n  }\r\n`\r\n\r\n\r\nexport const Head = () => <Seo title=\"My Projects\" />\r\n \r\nexport default ProjectsPage;"],"names":["getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","inProps","ref","useThemeProps","className","component","other","ownerState","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","display","alignItems","marginLeft","slots","Head","title","data","Divider","projects","map","project","index","item","allFile","edges","find","edge","node","relativePath","image","key","Card","variant","G","childImageSharp","gatsbyImageData","style","width","height","formats","loading","alt","CardContent","Typography","color","company","description","href"],"sourceRoot":""}